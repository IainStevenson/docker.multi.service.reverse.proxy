version: '3.4'

services:

  myInfo.store:
    hostname: store.local.myInfo.world # root certificate must support his dns entry
    build:
      context: .
      dockerfile: Store/Dockerfile  
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd

  myInfo.support:
    hostname: support.local.myInfo.world # root certificate must support his dns entry
    build:
      context: .
      dockerfile: Support/Dockerfile    
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd

  myInfo.proxy:  
    hostname: local.myInfo.world
    build:
      context: .
      dockerfile: Proxy/Dockerfile
    ports:
      - "80:80"
      - "443:443"   
      - "27017:27017"   
      
  myInfo.identity:
    hostname: identity.local.myInfo.world # root certificate must support his dns entry
    build:
      context: .
      dockerfile: Identity/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd

  myInfo.api:
    hostname: api.local.myInfo.world # root certificate must support his dns entry
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80 
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro # see :ConfigureSecrets in Proxy/Gen-Certs.cmd
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro # see :ConfigureSecrets in  Proxy/Gen-Certs.cmd

  myInfo.mongo:
    hostname: mongo.local.myInfo.world # root certificate must support his dns entry
    build:
      context: .
      dockerfile: MongoDB/Dockerfile
    environment: 
      - MONGO_INITDB_USERNAME=admin # must match mongo-init-local.js
      - MONGO_INITDB_PASSWORD=admin # must match mongo-init-local.js
      - MONGO_INITDB_DATABASE=admin # must match mongo-init-local.js
    volumes:
      - ./mongo-init-local.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ${APPDATA}/MongoDb/Data:/data/db # local persistence of mongo database
      - ${APPDATA}/MongoDb/Logs:/var/log/mongodb/ # local persistence of mongo database