{
	"info": {
		"_postman_id": "92e4aee7-9a34-4510-8767-e2622254583c",
		"name": "mystore.local",
		"description": "A docker orchestration of multiple microservices behind a proxy uysing https and letsencrypt.\r\nAuthentication and authorisation are not included its a simple https scheme for transport security and endpoint validation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Mvc",
			"item": [
				{
					"name": "Get Identity Server Well known openid configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/identity/.well-known/openid-configuration",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"identity",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test access to Support with /support/home/privacy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/support/home/privacy",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"support",
								"home",
								"privacy"
							]
						},
						"description": "Test required  direct access to Container 2 (Support) (support) "
					},
					"response": []
				},
				{
					"name": "Test access to Store by default",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/store",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"store"
							]
						},
						"description": "Test required  direct access to Container 1 (Store) (store) "
					},
					"response": []
				},
				{
					"name": "Test access to Store with /store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/store",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"store"
							]
						},
						"description": "Test required  direct access to Container 1 (Store) (store) "
					},
					"response": []
				},
				{
					"name": "Test access to Store with /store/home",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/store/home",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"store",
								"home"
							]
						},
						"description": "Test required  direct access to Container 1 (Store) (store) "
					},
					"response": []
				},
				{
					"name": "Test access to Store with /store/home/privacy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/store/home/privacy",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"store",
								"home",
								"privacy"
							]
						},
						"description": "Test required  direct access to Container 1 (Store) (store) "
					},
					"response": []
				},
				{
					"name": "Test access to Support with /support/home",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/support/home",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"support",
								"home"
							]
						},
						"description": "Test required  direct access to Container 2 (Support) (support) "
					},
					"response": []
				},
				{
					"name": "Test access to Support with /support",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"  pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/support",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"support"
							]
						},
						"description": "Test required  direct access to Container 2 (Support) (support) "
					},
					"response": []
				}
			]
		},
		{
			"name": "Api",
			"item": [
				{
					"name": "POST Resource to the secured API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);  \r",
									"    \r",
									"    var locationHeader = pm.response.headers.get(\"Location\");\r",
									"    console.log(\"Location header: \", locationHeader)\r",
									"\r",
									"    var locationHeaderElements = locationHeader.split('/');\r",
									"    console.log(\"Location header Elements: \", locationHeaderElements)\r",
									"    console.log(\"# Location header Elements: \", locationHeaderElements.length)\r",
									"\r",
									"    var crudId = locationHeaderElements[locationHeaderElements.length-1];\r",
									"\r",
									"    console.log(\"Location header ID: \", crudId)\r",
									"\r",
									"    pm.environment.set('crudId', crudId);\r",
									"\r",
									"});\r",
									"pm.test(\"Location header is present\", function () {\r",
									"    pm.response.to.have.header(\"Location\");\r",
									"});\r",
									"// pm.test(\"Response time is less than 200ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"// });\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{currentAccessToken}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{currentAccessToken}}.eyJuYmYiOjE2MDgwMjY0OTgsImV4cCI6MTYwODAzMDA5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2lkZW50aXR5IiwiYXVkIjoibWlDb25zZW50LkFwaSIsImNsaWVudF9pZCI6IjM2ODQ0QTZCLUEyM0UtNEY2OS1CNDU2LTQzQzFFOTVFOUVGMSIsInN1YiI6IjgwOWJmNDE3LTNkNWQtNDJlMi04OTAzLThlNzljYmUwYzEyYiIsImF1dGhfdGltZSI6MTYwODAyNjQ5NywiaWRwIjoibG9jYWwiLCJlbWFpbCI6InNkay5hbGljZUBtaUNvbnNlbnQuY29tIiwic2NvcGUiOlsibWlDb25zZW50LkFwaSJdLCJhbXIiOlsicHdkIl19.P1KxhAHZPwrWYCb9LjDQEv_ZteQPd1VDjWIkyWB0cOg9rK3uJ75ovLlcUqdJGuImjVVFaFp3eAFR5AqND8N1yqN1wg4MCa8IkN7YKv-KN5QnqtTLC3u81vj0xEKzfa_tXZirxEnv9N4Uz_Tw_-6nfPFT5qQcPXATq7Y_F51dp9sUoywcFEQdaQ6FeSAbKN7B86OEOE5kpbayCE6q7zk6-f_AwNcF1SOROXG8GHAUjPnw_pGg4nsbmvsFIQWk3fW9hgDJ3QsH94VLIuXVr_tEIah65iLbaq1wJUt-zUzyJcAEs8WpJE-rX15OE87IZn1ITHmL-xc14dAMCBxoW-hVQw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"temperatureC\": 37,\r\n    \"summary\": \"Balmy\"\r\n}"
						},
						"url": {
							"raw": "{{baseUri}}/api/resources/WeatherForecast",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"api",
								"resources",
								"WeatherForecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET One Resource from the secured API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{currentAccessToken}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{currentAccessToken}}.eyJuYmYiOjE2MDgwMjY0OTgsImV4cCI6MTYwODAzMDA5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2lkZW50aXR5IiwiYXVkIjoibWlDb25zZW50LkFwaSIsImNsaWVudF9pZCI6IjM2ODQ0QTZCLUEyM0UtNEY2OS1CNDU2LTQzQzFFOTVFOUVGMSIsInN1YiI6IjgwOWJmNDE3LTNkNWQtNDJlMi04OTAzLThlNzljYmUwYzEyYiIsImF1dGhfdGltZSI6MTYwODAyNjQ5NywiaWRwIjoibG9jYWwiLCJlbWFpbCI6InNkay5hbGljZUBtaUNvbnNlbnQuY29tIiwic2NvcGUiOlsibWlDb25zZW50LkFwaSJdLCJhbXIiOlsicHdkIl19.P1KxhAHZPwrWYCb9LjDQEv_ZteQPd1VDjWIkyWB0cOg9rK3uJ75ovLlcUqdJGuImjVVFaFp3eAFR5AqND8N1yqN1wg4MCa8IkN7YKv-KN5QnqtTLC3u81vj0xEKzfa_tXZirxEnv9N4Uz_Tw_-6nfPFT5qQcPXATq7Y_F51dp9sUoywcFEQdaQ6FeSAbKN7B86OEOE5kpbayCE6q7zk6-f_AwNcF1SOROXG8GHAUjPnw_pGg4nsbmvsFIQWk3fW9hgDJ3QsH94VLIuXVr_tEIah65iLbaq1wJUt-zUzyJcAEs8WpJE-rX15OE87IZn1ITHmL-xc14dAMCBxoW-hVQw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/api/resources//WeatherForecast/{{crudId}}",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"api",
								"resources",
								"",
								"WeatherForecast",
								"{{crudId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Many Resources from the secured API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{currentAccessToken}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{currentAccessToken}}.eyJuYmYiOjE2MDgwMjY0OTgsImV4cCI6MTYwODAzMDA5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2lkZW50aXR5IiwiYXVkIjoibWlDb25zZW50LkFwaSIsImNsaWVudF9pZCI6IjM2ODQ0QTZCLUEyM0UtNEY2OS1CNDU2LTQzQzFFOTVFOUVGMSIsInN1YiI6IjgwOWJmNDE3LTNkNWQtNDJlMi04OTAzLThlNzljYmUwYzEyYiIsImF1dGhfdGltZSI6MTYwODAyNjQ5NywiaWRwIjoibG9jYWwiLCJlbWFpbCI6InNkay5hbGljZUBtaUNvbnNlbnQuY29tIiwic2NvcGUiOlsibWlDb25zZW50LkFwaSJdLCJhbXIiOlsicHdkIl19.P1KxhAHZPwrWYCb9LjDQEv_ZteQPd1VDjWIkyWB0cOg9rK3uJ75ovLlcUqdJGuImjVVFaFp3eAFR5AqND8N1yqN1wg4MCa8IkN7YKv-KN5QnqtTLC3u81vj0xEKzfa_tXZirxEnv9N4Uz_Tw_-6nfPFT5qQcPXATq7Y_F51dp9sUoywcFEQdaQ6FeSAbKN7B86OEOE5kpbayCE6q7zk6-f_AwNcF1SOROXG8GHAUjPnw_pGg4nsbmvsFIQWk3fW9hgDJ3QsH94VLIuXVr_tEIah65iLbaq1wJUt-zUzyJcAEs8WpJE-rX15OE87IZn1ITHmL-xc14dAMCBxoW-hVQw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/api/resources//WeatherForecast",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"api",
								"resources",
								"",
								"WeatherForecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Resource to the secured API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{currentAccessToken}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{currentAccessToken}}.eyJuYmYiOjE2MDgwMjY0OTgsImV4cCI6MTYwODAzMDA5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2lkZW50aXR5IiwiYXVkIjoibWlDb25zZW50LkFwaSIsImNsaWVudF9pZCI6IjM2ODQ0QTZCLUEyM0UtNEY2OS1CNDU2LTQzQzFFOTVFOUVGMSIsInN1YiI6IjgwOWJmNDE3LTNkNWQtNDJlMi04OTAzLThlNzljYmUwYzEyYiIsImF1dGhfdGltZSI6MTYwODAyNjQ5NywiaWRwIjoibG9jYWwiLCJlbWFpbCI6InNkay5hbGljZUBtaUNvbnNlbnQuY29tIiwic2NvcGUiOlsibWlDb25zZW50LkFwaSJdLCJhbXIiOlsicHdkIl19.P1KxhAHZPwrWYCb9LjDQEv_ZteQPd1VDjWIkyWB0cOg9rK3uJ75ovLlcUqdJGuImjVVFaFp3eAFR5AqND8N1yqN1wg4MCa8IkN7YKv-KN5QnqtTLC3u81vj0xEKzfa_tXZirxEnv9N4Uz_Tw_-6nfPFT5qQcPXATq7Y_F51dp9sUoywcFEQdaQ6FeSAbKN7B86OEOE5kpbayCE6q7zk6-f_AwNcF1SOROXG8GHAUjPnw_pGg4nsbmvsFIQWk3fW9hgDJ3QsH94VLIuXVr_tEIah65iLbaq1wJUt-zUzyJcAEs8WpJE-rX15OE87IZn1ITHmL-xc14dAMCBxoW-hVQw",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"temperatureC\": 38,\r\n    \"summary\": \"Balmy\"\r\n}"
						},
						"url": {
							"raw": "{{baseUri}}/api/resources/weatherforecast/{{crudId}}",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"api",
								"resources",
								"weatherforecast",
								"{{crudId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Resource from the secured API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{currentAccessToken}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{currentAccessToken}}.eyJuYmYiOjE2MDgwMjY0OTgsImV4cCI6MTYwODAzMDA5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2lkZW50aXR5IiwiYXVkIjoibWlDb25zZW50LkFwaSIsImNsaWVudF9pZCI6IjM2ODQ0QTZCLUEyM0UtNEY2OS1CNDU2LTQzQzFFOTVFOUVGMSIsInN1YiI6IjgwOWJmNDE3LTNkNWQtNDJlMi04OTAzLThlNzljYmUwYzEyYiIsImF1dGhfdGltZSI6MTYwODAyNjQ5NywiaWRwIjoibG9jYWwiLCJlbWFpbCI6InNkay5hbGljZUBtaUNvbnNlbnQuY29tIiwic2NvcGUiOlsibWlDb25zZW50LkFwaSJdLCJhbXIiOlsicHdkIl19.P1KxhAHZPwrWYCb9LjDQEv_ZteQPd1VDjWIkyWB0cOg9rK3uJ75ovLlcUqdJGuImjVVFaFp3eAFR5AqND8N1yqN1wg4MCa8IkN7YKv-KN5QnqtTLC3u81vj0xEKzfa_tXZirxEnv9N4Uz_Tw_-6nfPFT5qQcPXATq7Y_F51dp9sUoywcFEQdaQ6FeSAbKN7B86OEOE5kpbayCE6q7zk6-f_AwNcF1SOROXG8GHAUjPnw_pGg4nsbmvsFIQWk3fW9hgDJ3QsH94VLIuXVr_tEIah65iLbaq1wJUt-zUzyJcAEs8WpJE-rX15OE87IZn1ITHmL-xc14dAMCBxoW-hVQw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUri}}/api/resources/weatherforecast/{{crudId}}",
							"host": [
								"{{baseUri}}"
							],
							"path": [
								"api",
								"resources",
								"weatherforecast",
								"{{crudId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{currentAccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const echoPostRequest = {",
					"  url: 'https://mystore.local/identity/connect/token',",
					"  method: 'POST',",
					"  header: 'Content-Type:application/x-www-form-urlencoded',",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: 'grant_type=client_credentials&scope=myStore.Api&client_id=SDK.Command&client_secret=secret'",
					"  }",
					"};",
					"",
					"var getToken = true;",
					"",
					"if (!pm.environment.get('accessTokenExpiry') || ",
					"    !pm.environment.get('currentAccessToken')) {",
					"    console.log('Token or expiry date are missing')",
					"} else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
					"    console.log('Token is expired')",
					"} else {",
					"    getToken = false;",
					"    console.log('No need to get a Token as expiry not passed');",
					"}",
					"",
					"if (getToken === true) {",
					"    pm.sendRequest(echoPostRequest, function (err, res) {",
					"        if (err === null) {",
					"            console.log('Saving the token and expiry date')",
					"            var responseJson = res.json();",
					"            pm.environment.set('currentAccessToken', responseJson.access_token)",
					"    ",
					"            var expiryDate = new Date();",
					"            expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"            pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
					"        }",
					"        else {",
					"            console.log('Error getting token', res.json());",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUri",
			"value": "https://mystore.local"
		},
		{
			"key": "currentAccessToken",
			"value": ""
		},
		{
			"key": "crudId",
			"value": ""
		}
	]
}